const { createClient } = require('@supabase/supabase-js')
const fs = require('fs')
const path = require('path')
require('dotenv').config({ path: '../.env.local' })

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
)

async function applyEnhancedSchema() {
  console.log('ЁЯЪА р╣Ар╕гр╕┤р╣Ир╕бр╕нр╕▒р╕Юр╣Ар╕Фр╕Чр╣Вр╕Др╕гр╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е...\n')

  try {
    // р╕нр╣Ир╕▓р╕Щр╣Др╕Яр╕ер╣М SQL
    const sqlFile = path.join(__dirname, 'enhanced-pilots-schema.sql')
    const sqlContent = fs.readFileSync(sqlFile, 'utf8')
    
    // р╣Бр╕Ър╣Ир╕З SQL р╣Ар╕Ыр╣Зр╕Щр╕Др╕│р╕кр╕▒р╣Ир╕Зр╣Бр╕вр╕Бр╣Ж (р╣Бр╕вр╕Бр╕Фр╣Йр╕зр╕в semicolon р╣Бр╕ер╕░ newlines)
    const sqlCommands = sqlContent
      .split(';')
      .map(cmd => cmd.trim())
      .filter(cmd => cmd.length > 0 && !cmd.startsWith('--'))

    console.log(`ЁЯУЭ р╕Юр╕Ъ ${sqlCommands.length} р╕Др╕│р╕кр╕▒р╣Ир╕З SQL`)

    let successCount = 0
    let errorCount = 0

    // р╕гр╕▒р╕Щр╕Др╕│р╕кр╕▒р╣Ир╕З SQL р╕Чр╕╡р╕ер╕░р╕Др╕│р╕кр╕▒р╣Ир╕З
    for (let i = 0; i < sqlCommands.length; i++) {
      const command = sqlCommands[i]
      if (command.trim() === '') continue

      console.log(`\nтП│ р╕гр╕▒р╕Щр╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Чр╕╡р╣И ${i + 1}: ${command.substring(0, 50)}...`)

      try {
        const { error } = await supabase.rpc('exec_sql', { sql_query: command })
        
        if (error) {
          console.log(`тЭМ р╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф: ${error.message}`)
          errorCount++
        } else {
          console.log(`тЬЕ р╕кр╕│р╣Ар╕гр╣Зр╕И`)
          successCount++
        }
      } catch (err) {
        console.log(`тЭМ Exception: ${err.message}`)
        errorCount++
      }

      // р╕лр╕Щр╣Ир╕зр╕Зр╣Ар╕зр╕ер╕▓р╕кр╕▒р╣Йр╕Щр╣Ж р╣Ар╕Юр╕╖р╣Ир╕нр╣Др╕бр╣Ир╣Гр╕лр╣Й flood database
      await new Promise(resolve => setTimeout(resolve, 100))
    }

    console.log(`\nЁЯУК р╕кр╕гр╕╕р╕Ыр╕Ьр╕ер╕Бр╕▓р╕гр╕гр╕▒р╕Щ:`)
    console.log(`тЬЕ р╕кр╕│р╣Ар╕гр╣Зр╕И: ${successCount} р╕Др╕│р╕кр╕▒р╣Ир╕З`)
    console.log(`тЭМ р╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф: ${errorCount} р╕Др╕│р╕кр╕▒р╣Ир╕З`)

    if (errorCount === 0) {
      console.log('\nЁЯОЙ р╕нр╕▒р╕Юр╣Ар╕Фр╕Чр╣Вр╕Др╕гр╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕│р╣Ар╕гр╣Зр╕Ир╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф!')
    } else {
      console.log('\nтЪая╕П р╕бр╕╡р╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╕Ър╕▓р╕Зр╕кр╣Ир╕зр╕Щ р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Supabase Dashboard')
    }

  } catch (error) {
    console.error('тЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╕лр╕ер╕▒р╕Б:', error)
  }
}

// р╕гр╕▒р╕Щр╕Бр╕▓р╕гр╕нр╕▒р╕Юр╣Ар╕Фр╕Ч
applyEnhancedSchema()
